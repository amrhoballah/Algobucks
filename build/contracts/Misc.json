{
  "contractName": "Misc",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Misc.sol\":\"Misc\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Misc.sol\":{\"keccak256\":\"0xd8506ee95a5cc0596fbfbb069a2f1cd76f412b668ea34c5159de2f0c9cb09573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://128fb6390ca79078f181cdf559407c9b5381e4415895b99c1daf7d6a03f95b48\",\"dweb:/ipfs/QmY5NU9Ai7wMY7VS9geAwkhLb83etJ6doRMxWJeQmPd1dT\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122034de2ede3aff85b082a847529a8f5fed4c29b8513c47170376f394a6dd0c1b8664736f6c634300080b0033",
  "deployedBytecode": "0x6080604052600080fdfea264697066735822122034de2ede3aff85b082a847529a8f5fed4c29b8513c47170376f394a6dd0c1b8664736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "60:1854:1:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "60:1854:1:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >= 0.8.11;\n\ncontract Misc{\n    enum PatientContactRelationship {GUARDIAN, PARTNER, FRIEND, FAMILY, CAREGIVER}\n\n    // struct Contact{\n    //     PatientContactRelationship relationship;\n    //     HumanName name;\n    //     ContactPoint telecom;\n    //     PhysicalAddress homeAddress;\n    //     Gender gender;\n    // }\n\n    // function getPatientCountPerDoc() public onlyPractitioner view returns(uint){\n    //     uint count = 0;\n    //     for(uint i=0;i<PatientList.length;i++){\n    //         Patient storage patientData = Patients[PatientList[i]];\n    //         if(patientData.generalPractitioner == msg.sender){\n    //             count++;\n    //         }\n    //     }\n    //     return(count);\n    // }\n\n     // function getCountPerOrg() external onlyOrganisationAdmin view returns(string memory){\n    //     uint count = 0;\n    //     uint count1 = 0;\n    //     for(uint i=0;i<PractitionerList.length;i++){\n    //         Practitioner storage practitionerData = Practitioners[PractitionerList[i]];\n    //         if(practitionerData.memberOrgaisation == msg.sender){\n    //             count++;\n    //         }\n    //     }\n    //     for(uint i=0;i<PatientList.length;i++){\n    //         Patient storage patientData = Patients[PatientList[i]];\n    //         if(patientData.managingOrganisation == msg.sender){\n    //             count1++;\n    //         }\n    //     }\n    //     return string(abi.encodePacked(count, \":\", count1));\n    // }\n    \n\n    // function getPatientCountPerOrg() external onlyOrganisationAdmin view returns(uint){\n    //     uint count = 0;\n    //     for(uint i=0;i<PatientList.length;i++){\n    //         Patient storage patientData = Patients[PatientList[i]];\n    //         if(patientData.managingOrganisation == msg.sender){\n    //             count++;\n    //         }\n    //     }\n    //     return(count);\n    // }\n}\n",
  "sourcePath": "/Users/amrhoballah/Documents/GitHub/Algobucks/contracts/Misc.sol",
  "ast": {
    "absolutePath": "project:/contracts/Misc.sol",
    "exportedSymbols": {
      "Misc": [
        1357
      ]
    },
    "id": 1358,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1350,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:26:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Misc",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1357,
        "linearizedBaseContracts": [
          1357
        ],
        "name": "Misc",
        "nameLocation": "69:4:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Misc.PatientContactRelationship",
            "id": 1356,
            "members": [
              {
                "id": 1351,
                "name": "GUARDIAN",
                "nameLocation": "112:8:1",
                "nodeType": "EnumValue",
                "src": "112:8:1"
              },
              {
                "id": 1352,
                "name": "PARTNER",
                "nameLocation": "122:7:1",
                "nodeType": "EnumValue",
                "src": "122:7:1"
              },
              {
                "id": 1353,
                "name": "FRIEND",
                "nameLocation": "131:6:1",
                "nodeType": "EnumValue",
                "src": "131:6:1"
              },
              {
                "id": 1354,
                "name": "FAMILY",
                "nameLocation": "139:6:1",
                "nodeType": "EnumValue",
                "src": "139:6:1"
              },
              {
                "id": 1355,
                "name": "CAREGIVER",
                "nameLocation": "147:9:1",
                "nodeType": "EnumValue",
                "src": "147:9:1"
              }
            ],
            "name": "PatientContactRelationship",
            "nameLocation": "84:26:1",
            "nodeType": "EnumDefinition",
            "src": "79:78:1"
          }
        ],
        "scope": 1358,
        "src": "60:1854:1",
        "usedErrors": []
      }
    ],
    "src": "32:1883:1"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Misc.sol",
    "exportedSymbols": {
      "Misc": [
        1357
      ]
    },
    "id": 1358,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1350,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:26:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Misc",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1357,
        "linearizedBaseContracts": [
          1357
        ],
        "name": "Misc",
        "nameLocation": "69:4:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Misc.PatientContactRelationship",
            "id": 1356,
            "members": [
              {
                "id": 1351,
                "name": "GUARDIAN",
                "nameLocation": "112:8:1",
                "nodeType": "EnumValue",
                "src": "112:8:1"
              },
              {
                "id": 1352,
                "name": "PARTNER",
                "nameLocation": "122:7:1",
                "nodeType": "EnumValue",
                "src": "122:7:1"
              },
              {
                "id": 1353,
                "name": "FRIEND",
                "nameLocation": "131:6:1",
                "nodeType": "EnumValue",
                "src": "131:6:1"
              },
              {
                "id": 1354,
                "name": "FAMILY",
                "nameLocation": "139:6:1",
                "nodeType": "EnumValue",
                "src": "139:6:1"
              },
              {
                "id": 1355,
                "name": "CAREGIVER",
                "nameLocation": "147:9:1",
                "nodeType": "EnumValue",
                "src": "147:9:1"
              }
            ],
            "name": "PatientContactRelationship",
            "nameLocation": "84:26:1",
            "nodeType": "EnumDefinition",
            "src": "79:78:1"
          }
        ],
        "scope": 1358,
        "src": "60:1854:1",
        "usedErrors": []
      }
    ],
    "src": "32:1883:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-06-25T17:58:05.158Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}